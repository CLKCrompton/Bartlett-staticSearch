<?xml version="1.0" encoding="utf-8"?><TEI xmlns:xi="http://www.w3.org/2001/XInclude" xmlns:svg="http://www.w3.org/2000/svg" xmlns:math="http://www.w3.org/1998/Math/MathML" xmlns="http://www.tei-c.org/ns/1.0" xmlns:sch="http://purl.oclc.org/dsdl/schematron" xml:base="file:/Users/joeytakeda/work/staticSearch/schema/staticSearch.odd"><?TEIVERSION VersionÂ 4.0.0. Last updated on
	13th February 2020, revision ccd19b0ba?> <teiHeader><fileDesc><titleStmt><title>Project Endings Static Search Generator</title><author><name>Martin Holmes</name></author><author><name>Joey Takeda</name></author></titleStmt><publicationStmt><publisher>University of Victoria Humanities Computing and Media Centre</publisher><availability><licence>Free to anyone for any purpose</licence></availability></publicationStmt><sourceDesc><p>Born-digital document</p></sourceDesc></fileDesc></teiHeader> <text><front><titlePage><docTitle><titlePart type="main">Project Endings Static Search Generator</titlePart><titlePart type="sub">Schema and guidelines for creating a static search engine for your HTML5 site</titlePart></docTitle><docAuthor>Martin Holmes</docAuthor><docAuthor>Joey Takeda</docAuthor><docDate>2019</docDate></titlePage><divGen type="toc"/></front><body><head>Project Endings Static Search Generator</head><p>This documentation provides instructions on how to use the Project Endings Static Search Generator to provide a fully-functional search <soCalled>engine</soCalled> to your website without any dependency on server-side code such as a database.</p><div xml:id="whatDoesItDo"><head>What does it do?</head><p>The generator tool processes your site to create an index of all the words appearing in the site, stemmed using a Porter2 stemmer, and stores the index in the form of a large number of small JSON files. It also creates JSON files for other search facets that you specify in the headers of your documents, to allow searches for documents by type, by date range, and so on. Then it creates a search page for your site, which processes user search terms and retrieves the required JSON files to provide search results.</p></div><div xml:id="textSearchFeatures"><head>Text search features</head><p>The Generator supports the following features:</p><list><item>Porter 2 stemming of terms (so searching for <q>wait</q> will also retrieve <q>waiting</q>, <q>waits</q>, <q>waited</q> etc.). Our stemmer is for English, but if you have documents in another language, you can create and plug in your own stemmer.</item><item>Boolean search operators. Adding <code>+</code> (plus) before a word means that search results <emph>must contain</emph> that word, and adding a <code>-</code> (minus) means that results <emph>must not contain</emph> that word. Words without plus or minus are treated as <emph>may contain</emph>, contributing to the score of any retrieved document.</item><item>Phrasal searches. Any quoted phrase will be searched as-is, and when quoted phrases are included in a search, any hit document must contain at least one of them. Note that phrasal search support requires a specific setting in your configuration file, because it increases the size of the index.</item><item>Keyword-in-context search results. This is also configurable, since including contexts increases the size of the index.</item><item>Search filtering using any metadata you like, allowing users to limit their search to specific document types.</item></list></div><div xml:id="searchFacetFeatures"><head>Search facet features</head><p>The Generator supports the following search facets:</p><list><item><term>Descriptors</term>. You might for example classify your documents as poems, short stories and novels; the user can then choose to search in only poems, or poems and short stories.</item><item><term>Date ranges</term>. You might assign each document a date (or a date range) for its first publication and another for its last publication; then users could search for documents first published in a certain date range and last published before another date.</item><item><term>Booleans</term> (true/false values). You might for instance specify that some poems are illustrated while others are not. The user could then limit their search only to illustrated poems.</item></list></div><div xml:id="howDoIGetIt"><head>How do I get it?</head><p>There are two ways to get the staticSearch code. The first is to download a release package from the <ref target="https://github.com/projectEndings/staticSearch/releases/">project release page</ref>; we recommend that you get the latest version. You can download a zip file and unzip it to create a folder containing the code.</p><p>The second way to get the codebase is to clone it from the <ref target="https://github.com/projectEndings/staticSearch">GitHub repository</ref>. If you're doing this, you can clone either the current master branch, the last release tag, or the dev branch. If you clone the dev branch, bear in mind that you're working with development code and things may break.</p></div><div xml:id="howDoIUseIt"><head>How do I use it?</head><p>First, you will have to make sure your site pages are correctly configured so that the Generator can parse them. Then, you will have to create a configuration file specifying what options you want to use. Then you run the generator, and the search functionality should be added to your site.</p><div><head>Configuring your site: search filters</head><p>The generator is expecting to parse <emph>well-formed XHTML5 web pages</emph>. That means web pages which are well-formed XML, using the XHTML namespace. If your site is just raggedy tag-soup, then you can't use this tool.</p><p>Next, you will need to decide whether you want search filters or not. If you want to allow your users to search (for example) only in poems, or only in articles, or only in blog posts, or any combination of these document types, you will need to add <gi>meta</gi> tags to the heads of your documents to specify what these filters are. Here is a simple example: <egXML xmlns="http://www.tei-c.org/ns/Examples"><meta name="Document type" class="staticSearch.desc" content="Poems"/></egXML> This specifies that there is to be a descriptive search filter called <q>Document type</q>, and one of the types is <q>Poems</q>; the document containing this <gi>meta</gi> tag is one of the Poems. Another type might be: <egXML xmlns="http://www.tei-c.org/ns/Examples"><meta name="Document type" class="staticSearch.desc" content="Short stories"/></egXML> If the Generator finds such meta tags when it is indexing, it will create a set of filter controls on the search page, enabling the user to constrain the search to a specific set of filter settings.</p><p>Another slightly different kind of search control is a document date. If your collection of documents has items from different dates, you can add a <gi>meta</gi> tag like this: <egXML xmlns="http://www.tei-c.org/ns/Examples"><meta name="Date of publication" class="staticSearch.date" content="1895-01-05"/></egXML> The date may take any of the following forms: <list><item>1895 (year only)</item><item>1895-01 (year and month)</item><item>1895-01-05 (year, month and day)</item></list> For some documents, it may not be possible to specify a single date in this form, so you can specify a range instead, using a slash to separate the start and end dates of the range (following ISO 8601): <list><item>1895/1897</item><item>1903-01-02/1905-05-31</item></list></p><p>A third filter type is the boolean (true/false) filter. To use boolean filters, add meta tags like this to your documents: <egXML xmlns="http://www.tei-c.org/ns/Examples"><meta name="Peer-reviewed" class="staticSearch.bool" content="true"/></egXML></p></div><div xml:id="configuringDocTitles"><head>Configuring your site: document titles</head><p>When the indexing process runs over your document collection, by default it will use the document title that it finds in the <gi>title</gi> element in the document header; that title will then be shown as a link to the document when it comes up in search results. However, that may not be the ideal title for this purpose; for example, all of your documents may include the site title as the first part of their document title, but it would be pointless to include this in the search result links. Therefore you can override the document title value by providing another meta tag, like this: <egXML xmlns="http://www.tei-c.org/ns/Examples"><meta name="docTitle" class="staticSearch.docTitle" content="What I did in my holidays"/></egXML></p></div><div xml:id="creatingConfigFile"><head>Creating a configuration file</head><p>The configuration file is an XML document which tells the Generator where to find your site, and what search features you would like to include. The configuration file conforms to a schema which is documented here.</p><p>There are three main sections of the configuration file: <list><item><ref target="#TEI.params">&lt;params&gt;</ref></item><item><ref target="#TEI.rules">&lt;rules&gt;</ref></item><item><ref target="#TEI.contexts">&lt;contexts&gt;</ref></item></list> Only the <ref target="#TEI.params">&lt;params&gt;</ref> element is necessary, but, as we discuss shortly, we highly suggest taking advantage of the <ref target="#TEI.rules">&lt;rules&gt;</ref> and <ref target="#TEI.contexts">&lt;contexts&gt;</ref> for the best results.</p><div><head>Specifying Parameters</head><div xml:id="paramsRequired"><head>Required parameters</head><p>The <ref target="#TEI.params">&lt;params&gt;</ref> element has two required elements for determining the resource collection that you wish to index: <list><item><ref target="#TEI.searchFile">&lt;searchFile&gt;</ref></item><item><ref target="#TEI.recurse">&lt;recurse&gt;</ref></item></list></p><p>The <ref target="#TEI.searchFile">&lt;searchFile&gt;</ref> element is a relative URI (resolved, like all URIs specified in the config file, against the configuration file location) that points directly to the search page that will be the primary access point for the search. Since the search file must be at the root of the directory that you wish to index (i.e. the directory that contains all of the XHTML you want the search to index), the searchFile parameter provides the necessary information for knowing what document collection to index and where to put the output JSON. In other words, in specifying the location of your search page, you are also specifying the location of your document collection. See <ref target="#searchPage">Creating a search page</ref> for more information on how to configure this file.</p><p>Note that all output files will be in a directory that is a sibling to the search page. For instance, in a document collection that looks something like: <list style="font-family: monospace"><item>myProject <list><item>novel.html</item><item>poem.html</item><item>shortstory.html</item><item>search.html</item></list></item></list> The collection of Javascript and JSON files will be in a directory like so: <list style="font-family: monospace"><item>myProject <list><item>novel.html</item><item>poem.html</item><item>shortstory.html</item><item>search.html</item><item><emph>staticSearch</emph></item></list></item></list></p><p>We also require the <ref target="#TEI.recurse">&lt;recurse&gt;</ref> element in the case where the document collection may be nested (as is common with static sites generated from Jekyll or Wordpress). The <ref target="#TEI.recurse">&lt;recurse&gt;</ref> element is a boolean (true or false) that determines whether or not to recurse into the subdirectories of the collection and index those files.</p></div><div xml:id="paramsOptional"><head>Optional Parameters</head><p>The following parameters are optional, but most projects will want to specify some of them:</p><list><item><ref target="#TEI.versionFile">&lt;versionFile&gt;</ref> enables you to specify the path to a plain-text file containing a simple version number for the project. This might take the form of a software-release-style version number such as <hi rend="val">1.5</hi>, or it might be a Subversion revision number or a Git commit id. It should not contain any spaces or punctuation. If you provide a version file, the version string will be used as part of the filenames for all the JSON resources created for the search. This is useful because it allows the browser to cache such resources when users repeatedly visit the search page, but if the project is rebuilt with a new version, those cached files will not be used because the new version will have different filenames. The path specified is relative to the location of the configuration file (or absolute, if you wish).</item><item><ref target="#TEI.phrasalSearch">&lt;phrasalSearch&gt;</ref> is a boolean parameter which specifies whether you want your search engine to support phrasal searches (quoted strings). Obviously this is a useful feature, but it is also costly in terms of the size of JSON token files; in order to support this kind of search, we store contexts for all hits for each token in each document, so if your site is very large, and your user base is unlikely to use phrasal searching, it may not be worth the overhead. The default value is true.</item><item><ref target="#TEI.createContexts">&lt;createContexts&gt;</ref> is a boolean parameter that specifies whether you want the indexer to store keyword-in-context extracts for each of the hits in a document. This increases the size of the index, but of course it makes for much more user-friendly search results.</item><item><ref target="#TEI.maxKwicsToHarvest">&lt;maxKwicsToHarvest&gt;</ref> controls the number of keyword-in-context extracts that will be harvested from the data for each term in a document. If you set this to a low number, the size of the JSON files will be constrained, but of course the user will only be able to see the KWICs that have been harvested in their search results.</item><item><ref target="#TEI.maxKwicsToShow">&lt;maxKwicsToShow&gt;</ref> controls the number of keyword-in-context extracts that will be shown in the search results for each hit document.</item><item><ref target="#TEI.totalKwicLength">&lt;totalKwicLength&gt;</ref> is an integer specifying how long a keyword-in-context string should be. Obviously, the higher this number is, the larger the individual index files will be, but the more useful the KWICs will be for users looking at the search results.</item><item><ref target="#TEI.kwicTruncateString">&lt;kwicTruncateString&gt;</ref> is a string containing the character you would like to use at the beginning and/or the end of a kwic which is not a full sentence. An ellipsis character is the default.</item><item><ref target="#TEI.verbose">&lt;verbose&gt;</ref> is a boolean which turns on/off detailed output messages during the indexing process. You might set this to true if something is not working as expected and you need to do some debugging.</item><item><ref target="#TEI.stopwordsFile">&lt;stopwordsFile&gt;</ref> is a string parameter containing the relative path (from the config file) to a text file containing a list of stopwords that you want to use for your site. A stopword is a word that will not be indexed, because it is too common (<mentioned>the</mentioned>, <mentioned>a</mentioned>, <mentioned>you</mentioned> and so on). The project has a built-in set of common stopwords for English, which we recommend you start from; you'll find it in <ident>xsl/english_stopwords.txt</ident>. If your site is all about a person, a place or some other entity, then you might add their name to the stopwords list, because it will presumably appear on almost every page and it makes no sense to search for it. One way to find such terms is to generate your index, then search for the largest JSON index files that are generated, to see if they might be too common to be useful as search terms.</item><item><ref target="#TEI.dictionaryFile">&lt;dictionaryFile&gt;</ref> is the relative path to a file containing an English dictionary (assuming your site is in English). This is used to check words during the indexing process, and a report generated at the end will list all the terms in the site which do not appear in the dictionary. This is a useful way to find typos in your site. Again, there is a default dictionary in <ident>xsl/english_words.txt</ident> which you might copy and adapt.</item><item><ref target="#TEI.indentJSON">&lt;indentJSON&gt;</ref> is a boolean parameter which controls whether the JSON files generated for the index are indented or not. Indenting makes the files easier for a human to read, if you need to understand them or debug them, but obviously it adds to their file size.</item><item><ref target="#TEI.outputFolder">&lt;outputFolder&gt;</ref> is the name of a folder into which you would like to place the JavaScript and JSON index files your site search. The default is <hi rend="val">staticSearch</hi>, but if you would prefer something else, you can specify it here. You may also use this element if you are defining two different searches within the same site, so that their files are kept in different locations. The value must conform with the <ref target="https://www.w3.org/TR/REC-xml/#dt-name">XML Name</ref> specification.</item></list></div></div><div><head>Specifying Rules (Optional)</head><p>The <ref target="#TEI.rules">&lt;rules&gt;</ref> elements specifies a list of conditions (using the <ref target="#TEI.rule">&lt;rule&gt;</ref> element) that tell the parser, using XPath statements in the <hi rend="att">xpath</hi> attribute, specific weights to assign to particular parts of each document. For instance, if you wanted all heading elements (<gi>h1</gi>, <gi>h2</gi>, etc) in documents to be given a greater weight and thus receive a higher score in the results, you can do so using a rule like so: <egXML xmlns="http://www.tei-c.org/ns/Examples"><rules><rule weight="2" xpath="h1 | h2 | h3 | h4 | h5 | h6"/></rules></egXML> Since we're using XPath 3.0 and XSLT 3.0, this can also be simplified to: <egXML xmlns="http://www.tei-c.org/ns/Examples"><rules><rule weight="2" xpath="*[matches(local-name(),'^h\d+$')]"/></rules></egXML> (It is worth noting, however, the above example is unnecessary: all heading elements are given a weight of 2 by default, which is the only preconfigured weight in static search.)</p><p>The value of the <hi rend="att">xpath</hi> attribute is transformed in a XSLT template match attribute, and thus must follow the same rules (i.e. no complex rules like <code>p/ancestor::div</code>). See the <ref target="https://www.w3.org/TR/xslt-30/#dt-pattern">W3C XSLT Specification</ref> for further details on allowable pattern rules.</p><p>Often, there will be elements that you want the tokenizer to ignore completely; for instance, if you have the same header in every document, then there's no reason to index its contents on every page. These elements can be ignored simply by using a <ref target="#TEI.rule">&lt;rule&gt;</ref> and setting its weight to 0. For instance, if you want to remove the header and the footer from the search indexing process, you could write something like: <egXML xmlns="http://www.tei-c.org/ns/Examples"><rule weight="0" xpath="footer | header"/></egXML> Or if you want to remove XHTML anchor tags (<gi>a</gi>) whose text is identical to the URL specified in its <hi rend="att">href</hi>, you could do something like: <egXML xmlns="http://www.tei-c.org/ns/Examples"><rule weight="0" xpath="a[@href=./text()]"/></egXML></p><p>Note that the indexer does not tokenize any content in the <gi>head</gi> of the document (but as noted above, metadata can be configured into filters) and that all elements in the <gi>body</gi> of a document are considered tokenizable. However, common elements that you might want to exclude include: <list><item><gi>script</gi></item><item><gi>style</gi></item><item><gi>code</gi></item></list></p></div><div><head>Specifying Contexts (Optional)</head><p>When the static search creates the keywords-in-contexts (the "kwic" or "snippets") for each token, it does so by looking for the nearest block-level element that it can use as its context. Take, for instance, this unordered list: <egXML xmlns="http://www.tei-c.org/ns/Examples"><ul><li>Keyword-in-context search results. This is also configurable, since including contexts
                    increases the size of the index.</li><li>Search filtering using any metadata you like, allowing users to limit their search to specific
                    document types.</li></ul></egXML> Each <gi>li</gi> elements is, by default, a <term>context</term> element, meaning that the snippet generated for each token will not extend beyond the <gi>li</gi> element boundaries; in this case, if the <gi>li</gi> was not a context attribute, the term <q>search</q> would produce a context that looks something like: <eg>"...the size of the index.<hi style="font-weight:bold;">Search</hi> filtering using any metadata you like,..."</eg></p><p>Using the <ref target="#TEI.contexts">&lt;contexts&gt;</ref> element, you can control what elements operate as contexts. For instance, say a page contained a marginal note, encoded as a <gi>span</gi> in your document beside its point of attachment:<note place="foot">This example taken from Thomas S. Kuhn, <title level="m">The Structure of Scientific Revolutions</title> (50th anniversary edition), University of Chicago Press, 2012: p. 191.</note> <egXML xmlns="http://www.tei-c.org/ns/Examples"><p>About that program I shall have nothing to say here,<span class="sidenote">Some information on this subject can be found in "Second Thoughts"</span> [...]
                </p></egXML> Using CSS, the footnote might be alongside the text of the document in margin, or made into a clickable object using Javascript. However, since the tokenizer is unaware of any server-side processing, it understands the <gi>span</gi> as an inline element and assumes the <gi>p</gi> constitutes the context of the element. A search for <q>information</q> might then return: <eg>"...nothing to say here,Some <hi style="font-weight:bold;">information</hi> on this subject can be found...</eg> To tell the tokenizer that the <gi>span</gi> constitutes the context block for any of its token, use the <ref target="#TEI.context">&lt;context&gt;</ref> element with an <hi rend="att">xpath</hi> pattern: <egXML xmlns="http://www.tei-c.org/ns/Examples"><contexts><context xpath="span[contains-token(@class,'sidenote')]"/></contexts></egXML></p><p>You can also configure it the other way: if a <gi>div</gi>, which is by default a context block, should not be understood as a context block, then you can tell the parser to not consider it as such using <hi rend="att">context</hi> set to false: <egXML xmlns="http://www.tei-c.org/ns/Examples"><contexts><context xpath="div" context="false"/></contexts></egXML></p><p>The default contexts elements are: <list><item><gi>body</gi></item><item><gi>div</gi></item><item><gi>blockquote</gi></item><item><gi>p</gi></item><item><gi>li</gi></item><item><gi>section</gi></item><item><gi>article</gi></item><item><gi>nav</gi></item><item><gi>h1</gi></item><item><gi>h2</gi></item><item><gi>h3</gi></item><item><gi>h4</gi></item><item><gi>h5</gi></item><item><gi>h6</gi></item><item><gi>td</gi></item></list></p></div></div><div xml:id="searchPage"><head>Creating a search page</head><p>You'll obviously want the search page for your site to conform with the look and feel of the rest of your site. You can create a complete HTML document (which must of course also be well-formed XML, so it can be processed), containing all the site components you need, and then the search build process will insert all the necessary components into that file. The only requirement is that the page contains one <gi>div</gi> element with the correct <hi rend="att">id</hi> attribute: <egXML xmlns="http://www.tei-c.org/ns/Examples"><div id="staticSearch"> 
                [...content will be supplied by the build process...] 
              </div></egXML> This <gi>div</gi> will be empty initially. The build process will find insert the search controls, scripts and results <gi>div</gi> into this container. Then whenever you rebuild the search for your site, the contents will be replaced. There is no need to make sure it's empty every time.</p><p>The search process will also add a CSS <gi>style</gi> element to the <gi>head</gi> of the document: <egXML xmlns="http://www.tei-c.org/ns/Examples"><style id="ssCss">
                  [...styles for search controls...]
                </style></egXML> You can customize this CSS by providing your own CSS that overrides it, using <gi>style</gi>, or <gi>link</gi>, placed after it in the <gi>head</gi> element, or by replacing the inserted CSS after the build process.</p><p>Note that once your file has been processed and all this content has been added, you can process it again at any time; there is no need to start every time with a clean, empty version of the search page.</p><p>You can take a look at the <ident>test/search.html</ident> page for an example of how to configure the search page (although note that since this page has already been processed, it has the CSS and the search controls embedded in it; it also has some additional JavaScript which we use for testing the search build results, which is not necessary for your site).</p></div><div xml:id="searchBuildProcess"><head>Running the search build process</head><p>Once you have configured your HTML and your configuration file, you're ready to create a search index and a search page for your site. This requires that you run ant in the root folder of the staticSearch project that you have downloaded or cloned.</p><p>Note: you will need Java and <ref target="https://ant.apache.org/">Apache Ant</ref> installed, as well as <ref target="http://ant-contrib.sourceforge.net/">ant-contrib</ref>.</p><p>Before running the search on your own site, you can test that your system is able to do the build by doing the (very quick) build of the test materials. If you simply run the <ident>ant</ident> command, like this:</p><eg>mholmes@linuxbox:~/Documents/staticSearch$ ant</eg><p>you should see a build process proceed using the small test collection of documents, and at the end, a results page should open up giving you a report on what was done. If this fails, then you'll need to troubleshoot the problem based on any error messages you see. (Do you have Java, Ant and ant-contrib installed and working on your system?).</p><p>If the test succeeds, you can view the results by uploading the <ident>test</ident> folder and all its contents to a web server, or by running a local webserver on your machine in that folder, using the <ref target="https://docs.python.org/3.8/library/http.server.html">Python HTTP server</ref> or <ref target="https://www.php.net/manual/en/features.commandline.webserver.php">PHP's built-in web server</ref>.</p><p>If the tests all work, then you're ready to build a search for your own site. Now you need to run the same command, but this time, tell the build process where to find your custom configuration file:</p><eg>ant -DconfigFile=/home/mholmes/mysite/config_staticSearch.xml</eg><p>The same process should run, and if it's successful, you should have a modified <ident>search.html</ident> page as well as a lot of index files in JSON format in your site HTML folder. Now you can test your own search in the same ways suggested above.</p></div></div><div xml:id="howDoesItWork"><head>How does it work?</head><div xml:id="buildingTheIndex"><head>Building the index</head><p>The tokenizing process first processes your configuration file to create an XSLT file with all your settings embedded in it. Next, it processes your document collection using those settings. Each document is tokenized, and then a separate JSON file is created for each distinct token found; this file contains links to each of the documents which contain that token, as well as keyword-in-context strings for the actual tokens. There will most likely be thousands of these files, but most of them are quite small. These constitute the textual index.</p><p>In addition, separate JSON files are created for the list of document titles, and for your stopword list if you have specified one.</p><p>Next, if you have specified search facets in your document headers, the processor will then create a separate JSON file for each of those search facets, consisting of a list of the document identifiers for all documents which match the filters; so if some of your documents are specified as <soCalled>Illustrated</soCalled> and some not (true or false), a JSON file will be created for the <soCalled>Illustrated</soCalled> facet, with a list of documents which are true for this facet, and a list of documents which are false.</p><p>Finally, the template file you have created for the search page on your site will be processed to add the required search controls and JavaScript to make the search work.</p></div><div xml:id="theSearchPage"><head>The search page</head><p>In order to provide fast, responsive search results, the search page must download only the information it needs for each specific search. Obviously, if it were to download the entire collection of thousands of token files, the process would take forever. So when you search for the word <mentioned>waiting</mentioned>, what happens is that the JavaScript stems that word, producing <mentioned>wait</mentioned>, then it downloads only the single file containing indexing information for that specific word, which is very rapid.</p><p>However, there is some information that is required for all or many searches. To display any results, the list of document titles must be downloaded, for example. A user may for instance use the search facets only, not searching for a particular word or phrase but just wanting a list of all the documents classified as <soCalled>Poems</soCalled>. This requires that the JSON file with information about that facet be downloaded. So there is some advantage in having the JavaScript start downloading some of the essential files (titles, stopwords and so on) as soon as the page loads, and it also starts downloading the facet files in the background.</p><p>At the same time, though, we don't want to clog up the connection downloading these files when the user may do a simple text search which doesn't depend on them, so these files are retrieved using a <soCalled>trickle</soCalled> approach, one at a time. Then if a search is initiated, all the files required for that specific search can be downloaded as fast as possible overriding the trickle sequence for files that are needed immediately.</p><p>Once the user has been on the search page for any length of time, all ancillary files will have been retrieved (assuming they weren't already cached by the browser), so the only files required for any search are those for the actual text search terms; the response should therefore be even faster for later searches than for early ones.</p></div></div></body><back><div><div><head>Elements</head><div type="refdoc" xml:id="TEI.config"><head>&lt;config&gt;</head><index indexName="ODDS"><term sortKey="config">&lt;config&gt;</term></index><table rend="wovenodd"><row><cell cols="2" rend="wovenodd-col2"><hi rend="label">&lt;config&gt; </hi>(<seg>The root element for the Search Generator configuration file.</seg>) </cell></row><row><cell rend="wovenodd-col1"><hi rend="label" xml:lang="en">Namespace</hi></cell><cell rend="wovenodd-col2">http://hcmc.uvic.ca/ns/staticSearch</cell></row><row><cell rend="wovenodd-col1"><hi rend="label" xml:lang="en">Module</hi></cell><cell rend="wovenodd-col2">ss</cell></row><row><cell rend="wovenodd-col1"><hi rend="label" xml:lang="en">Contained by</hi></cell><cell rend="wovenodd-col2"><ab rend="parent">â</ab></cell></row><row><cell rend="wovenodd-col1"><hi rend="label" xml:lang="en">May contain</hi></cell><cell rend="wovenodd-col2"><ab rend="specChildren"><ab rend="specChild"><seg rend="specChildModule">ss: </seg><seg rend="specChildElements"><ref target="#TEI.contexts" rend="link_odd_elementSpec">contexts</ref><c xml:space="preserve"> </c><ref target="#TEI.excludes" rend="link_odd_elementSpec">excludes</ref><c xml:space="preserve"> </c><ref target="#TEI.params" rend="link_odd_elementSpec">params</ref><c xml:space="preserve"> </c><ref target="#TEI.rules" rend="link_odd_elementSpec">rules</ref></seg></ab></ab></cell></row><row><cell rend="wovenodd-col1"><hi rend="label" xml:lang="en">Content model</hi></cell><cell rend="wovenodd-col2"><eg xml:space="preserve">
&lt;content&gt;
Â &lt;elementRefÂ key="params"/&gt;
Â &lt;elementRefÂ key="rules"Â minOccurs="0"/&gt;
Â &lt;elementRefÂ key="contexts"Â minOccurs="0"/&gt;
Â &lt;elementRefÂ key="excludes"Â minOccurs="0"/&gt;
&lt;/content&gt;
    </eg></cell></row><row><cell rend="wovenodd-col1"><hi rend="label" xml:lang="en">Schema Declaration</hi></cell><cell rend="wovenodd-col2"><eg rend="eg_rnc" xml:space="preserve">
element config { <ref target="#TEI.params">params</ref>, <ref target="#TEI.rules">rules</ref>?, <ref target="#TEI.contexts">contexts</ref>?, <ref target="#TEI.excludes">excludes</ref>? }</eg></cell></row></table></div><div type="refdoc" xml:id="TEI.context"><head>&lt;context&gt;</head><index indexName="ODDS"><term sortKey="context">&lt;context&gt;</term><index indexName="ODDS"><term sortKey="context">@context</term></index></index><table rend="wovenodd"><row><cell cols="2" rend="wovenodd-col2"><hi rend="label">&lt;context&gt; </hi>(<seg>A context definition, providing an XPath attribute that identifies the context,
              allowing keyword-in-context fragments to be bounded by a specific context.</seg>) </cell></row><row><cell rend="wovenodd-col1"><hi rend="label" xml:lang="en">Namespace</hi></cell><cell rend="wovenodd-col2">http://hcmc.uvic.ca/ns/staticSearch</cell></row><row><cell rend="wovenodd-col1"><hi rend="label" xml:lang="en">Module</hi></cell><cell rend="wovenodd-col2">ss</cell></row><row><cell rend="wovenodd-col1"><hi rend="label" xml:lang="en">Attributes</hi></cell><cell rend="wovenodd-col2"><ref target="#TEI.att.xpath">att.xpath</ref> (<hi rend="attribute">@xpath</hi>)<c xml:space="preserve"> </c><ref target="#TEI.att.labelled">att.labelled</ref> (<hi rend="attribute">@label</hi>)<c xml:space="preserve"> </c><table rend="attList"><row><cell rend="odd_label">context</cell><cell rend="odd_value"><table rend="attDef"><row><cell rend="odd_label"><hi rend="label" xml:lang="en">Status</hi> </cell><cell rend="odd_value"><seg xml:lang="en">Optional</seg></cell></row><row><cell rend="odd_label"><hi xml:lang="en" rend="label">Datatype</hi> </cell><cell rend="odd_value"><tei:ref xmlns:tei="http://www.tei-c.org/ns/1.0" target="https://www.w3.org/TR/xmlschema-2/#boolean">boolean</tei:ref></cell></row></table></cell></row></table></cell></row><row><cell rend="wovenodd-col1"><hi rend="label" xml:lang="en">Contained by</hi></cell><cell rend="wovenodd-col2"><ab rend="parent"><ab rend="specChildren"><ab rend="specChild"><seg rend="specChildModule">ss: </seg><seg rend="specChildElements"><ref target="#TEI.contexts" rend="link_odd_elementSpec">contexts</ref></seg></ab></ab></ab></cell></row><row><cell rend="wovenodd-col1"><hi rend="label" xml:lang="en">May contain</hi></cell><cell rend="wovenodd-col2"><seg xml:lang="en">Empty element</seg></cell></row><row><cell rend="wovenodd-col1"><hi rend="label" xml:lang="en">Content model</hi></cell><cell rend="wovenodd-col2"><eg xml:space="preserve">
&lt;content&gt;
Â &lt;empty/&gt;
&lt;/content&gt;
    </eg></cell></row><row><cell rend="wovenodd-col1"><hi rend="label" xml:lang="en">Schema Declaration</hi></cell><cell rend="wovenodd-col2"><eg rend="eg_rnc" xml:space="preserve">
element context
{
   <ref target="#TEI.att.xpath">att.xpath.attributes</ref>,
   <ref target="#TEI.att.labelled">att.labelled.attributes</ref>,
   attribute context { text }?,
   empty
}</eg></cell></row></table></div><div type="refdoc" xml:id="TEI.contexts"><head>&lt;contexts&gt;</head><index indexName="ODDS"><term sortKey="contexts">&lt;contexts&gt;</term></index><table rend="wovenodd"><row><cell cols="2" rend="wovenodd-col2"><hi rend="label">&lt;contexts&gt; </hi>(<seg>The set of contexts, expressed as XPath, that controls the identification of
            contexts for keyword-in-context fragments.</seg>) </cell></row><row><cell rend="wovenodd-col1"><hi rend="label" xml:lang="en">Namespace</hi></cell><cell rend="wovenodd-col2">http://hcmc.uvic.ca/ns/staticSearch</cell></row><row><cell rend="wovenodd-col1"><hi rend="label" xml:lang="en">Module</hi></cell><cell rend="wovenodd-col2">ss</cell></row><row><cell rend="wovenodd-col1"><hi rend="label" xml:lang="en">Contained by</hi></cell><cell rend="wovenodd-col2"><ab rend="parent"><ab rend="specChildren"><ab rend="specChild"><seg rend="specChildModule">ss: </seg><seg rend="specChildElements"><ref target="#TEI.config" rend="link_odd_elementSpec">config</ref></seg></ab></ab></ab></cell></row><row><cell rend="wovenodd-col1"><hi rend="label" xml:lang="en">May contain</hi></cell><cell rend="wovenodd-col2"><ab rend="specChildren"><ab rend="specChild"><seg rend="specChildModule">ss: </seg><seg rend="specChildElements"><ref target="#TEI.context" rend="link_odd_elementSpec">context</ref></seg></ab></ab></cell></row><row><cell rend="wovenodd-col1"><hi rend="label" xml:lang="en">Content model</hi></cell><cell rend="wovenodd-col2"><eg xml:space="preserve">
&lt;content&gt;
Â &lt;elementRefÂ key="context"Â minOccurs="1"
Â Â maxOccurs="unbounded"/&gt;
&lt;/content&gt;
    </eg></cell></row><row><cell rend="wovenodd-col1"><hi rend="label" xml:lang="en">Schema Declaration</hi></cell><cell rend="wovenodd-col2"><eg rend="eg_rnc" xml:space="preserve">
element contexts { <ref target="#TEI.context">context</ref>+ }</eg></cell></row></table></div><div type="refdoc" xml:id="TEI.createContexts"><head>&lt;createContexts&gt;</head><index indexName="ODDS"><term sortKey="createContexts">&lt;createContexts&gt;</term></index><table rend="wovenodd"><row><cell cols="2" rend="wovenodd-col2"><hi rend="label">&lt;createContexts&gt; </hi>(<seg>Whether to include keyword-in-context extracts in the index. This increases the
              size of the index considerably, but it allows for more user-friendly search results,
              as well as phrasal searches.</seg>) </cell></row><row><cell rend="wovenodd-col1"><hi rend="label" xml:lang="en">Namespace</hi></cell><cell rend="wovenodd-col2">http://hcmc.uvic.ca/ns/staticSearch</cell></row><row><cell rend="wovenodd-col1"><hi rend="label" xml:lang="en">Module</hi></cell><cell rend="wovenodd-col2">ss</cell></row><row><cell rend="wovenodd-col1"><hi rend="label" xml:lang="en">Contained by</hi></cell><cell rend="wovenodd-col2"><ab rend="parent"><ab rend="specChildren"><ab rend="specChild"><seg rend="specChildModule">ss: </seg><seg rend="specChildElements"><ref target="#TEI.params" rend="link_odd_elementSpec">params</ref></seg></ab></ab></ab></cell></row><row><cell rend="wovenodd-col1"><hi rend="label" xml:lang="en">May contain</hi></cell><cell rend="wovenodd-col2"><seg xml:lang="en">Empty element</seg></cell></row><row><cell rend="wovenodd-col1"><hi rend="label" xml:lang="en">Content model</hi></cell><cell rend="wovenodd-col2"><eg xml:space="preserve">
&lt;content&gt;
Â &lt;dataRefÂ name="boolean"/&gt;
&lt;/content&gt;
    </eg></cell></row><row><cell rend="wovenodd-col1"><hi rend="label" xml:lang="en">Schema Declaration</hi></cell><cell rend="wovenodd-col2"><eg rend="eg_rnc" xml:space="preserve">
element createContexts { xsd:boolean }</eg></cell></row></table></div><div type="refdoc" xml:id="TEI.dictionaryFile"><head>&lt;dictionaryFile&gt;</head><index indexName="ODDS"><term sortKey="dictionaryFile">&lt;dictionaryFile&gt;</term></index><table rend="wovenodd"><row><cell cols="2" rend="wovenodd-col2"><hi rend="label">&lt;dictionaryFile&gt; </hi>(<seg>The location of a dictionary file (one word per line) which will be used to check
            tokens when indexing.</seg>) </cell></row><row><cell rend="wovenodd-col1"><hi rend="label" xml:lang="en">Namespace</hi></cell><cell rend="wovenodd-col2">http://hcmc.uvic.ca/ns/staticSearch</cell></row><row><cell rend="wovenodd-col1"><hi rend="label" xml:lang="en">Module</hi></cell><cell rend="wovenodd-col2">ss</cell></row><row><cell rend="wovenodd-col1"><hi rend="label" xml:lang="en">Contained by</hi></cell><cell rend="wovenodd-col2"><ab rend="parent"><ab rend="specChildren"><ab rend="specChild"><seg rend="specChildModule">ss: </seg><seg rend="specChildElements"><ref target="#TEI.params" rend="link_odd_elementSpec">params</ref></seg></ab></ab></ab></cell></row><row><cell rend="wovenodd-col1"><hi rend="label" xml:lang="en">May contain</hi></cell><cell rend="wovenodd-col2"><seg xml:lang="en">Empty element</seg></cell></row><row><cell rend="wovenodd-col1"><hi rend="label" xml:lang="en">Content model</hi></cell><cell rend="wovenodd-col2"><eg xml:space="preserve">
&lt;content&gt;
Â &lt;dataRefÂ name="anyURI"/&gt;
&lt;/content&gt;
    </eg></cell></row><row><cell rend="wovenodd-col1"><hi rend="label" xml:lang="en">Schema Declaration</hi></cell><cell rend="wovenodd-col2"><eg rend="eg_rnc" xml:space="preserve">
element dictionaryFile { xsd:anyURI }</eg></cell></row></table></div><div type="refdoc" xml:id="TEI.exclude"><head>&lt;exclude&gt;</head><index indexName="ODDS"><term sortKey="exclude">&lt;exclude&gt;</term><index indexName="ODDS"><term sortKey="type">@type</term></index></index><table rend="wovenodd"><row><cell cols="2" rend="wovenodd-col2"><hi rend="label">&lt;exclude&gt; </hi>(<seg>An exclusion definition, which excludes either documents or filters as defined by an XPath.</seg>) </cell></row><row><cell rend="wovenodd-col1"><hi rend="label" xml:lang="en">Namespace</hi></cell><cell rend="wovenodd-col2">http://hcmc.uvic.ca/ns/staticSearch</cell></row><row><cell rend="wovenodd-col1"><hi rend="label" xml:lang="en">Module</hi></cell><cell rend="wovenodd-col2">ss</cell></row><row><cell rend="wovenodd-col1"><hi rend="label" xml:lang="en">Attributes</hi></cell><cell rend="wovenodd-col2"><ref target="#TEI.att.xpath">att.xpath</ref> (<hi rend="attribute">@xpath</hi>)<c xml:space="preserve"> </c><table rend="attList"><row><cell rend="odd_label">type</cell><cell rend="odd_value"><table rend="attDef"><row><cell rend="odd_label"><hi rend="label" xml:lang="en">Status</hi> </cell><cell rend="odd_value"><seg xml:lang="en"><hi rend="required">Required</hi></seg></cell></row><row><cell rend="odd_label"><hi rend="label" xml:lang="en">Legal values are:</hi></cell><cell rend="odd_value"><list rend="valList"><label rend="odd_label">index</label><item rend="odd_value">(<seg>Index exclusion</seg>) <seg>An exclusion that specifies HTML fragment (which itself can be the root HTML element) to exclude from the document index.</seg></item><label rend="odd_label">filter</label><item rend="odd_value">(<seg>Filter exclusion</seg>) <seg>An exclusion that matches an HTML meta tag to exclude from the filter controls on the search page.</seg></item></list></cell></row></table></cell></row></table></cell></row><row><cell rend="wovenodd-col1"><hi rend="label" xml:lang="en">Contained by</hi></cell><cell rend="wovenodd-col2"><ab rend="parent"><ab rend="specChildren"><ab rend="specChild"><seg rend="specChildModule">ss: </seg><seg rend="specChildElements"><ref target="#TEI.excludes" rend="link_odd_elementSpec">excludes</ref></seg></ab></ab></ab></cell></row><row><cell rend="wovenodd-col1"><hi rend="label" xml:lang="en">May contain</hi></cell><cell rend="wovenodd-col2"><seg xml:lang="en">Empty element</seg></cell></row><row><cell rend="wovenodd-col1"><hi rend="label" xml:lang="en">Content model</hi></cell><cell rend="wovenodd-col2"><eg xml:space="preserve">
&lt;content&gt;
Â &lt;empty/&gt;
&lt;/content&gt;
    </eg></cell></row><row><cell rend="wovenodd-col1"><hi rend="label" xml:lang="en">Schema Declaration</hi></cell><cell rend="wovenodd-col2"><eg rend="eg_rnc" xml:space="preserve">
element exclude
{
   <ref target="#TEI.att.xpath">att.xpath.attributes</ref>,
   attribute type { "index" | "filter" },
   empty
}</eg></cell></row></table></div><div type="refdoc" xml:id="TEI.excludes"><head>&lt;excludes&gt;</head><index indexName="ODDS"><term sortKey="excludes">&lt;excludes&gt;</term></index><table rend="wovenodd"><row><cell cols="2" rend="wovenodd-col2"><hi rend="label">&lt;excludes&gt; </hi>(<seg>The set of exclusions, expressed as XPath, that control the subset of documents
            for a particular search.</seg>) </cell></row><row><cell rend="wovenodd-col1"><hi rend="label" xml:lang="en">Namespace</hi></cell><cell rend="wovenodd-col2">http://hcmc.uvic.ca/ns/staticSearch</cell></row><row><cell rend="wovenodd-col1"><hi rend="label" xml:lang="en">Module</hi></cell><cell rend="wovenodd-col2">ss</cell></row><row><cell rend="wovenodd-col1"><hi rend="label" xml:lang="en">Contained by</hi></cell><cell rend="wovenodd-col2"><ab rend="parent"><ab rend="specChildren"><ab rend="specChild"><seg rend="specChildModule">ss: </seg><seg rend="specChildElements"><ref target="#TEI.config" rend="link_odd_elementSpec">config</ref></seg></ab></ab></ab></cell></row><row><cell rend="wovenodd-col1"><hi rend="label" xml:lang="en">May contain</hi></cell><cell rend="wovenodd-col2"><ab rend="specChildren"><ab rend="specChild"><seg rend="specChildModule">ss: </seg><seg rend="specChildElements"><ref target="#TEI.exclude" rend="link_odd_elementSpec">exclude</ref></seg></ab></ab></cell></row><row><cell rend="wovenodd-col1"><hi rend="label" xml:lang="en">Content model</hi></cell><cell rend="wovenodd-col2"><eg xml:space="preserve">
&lt;content&gt;
Â &lt;elementRefÂ key="exclude"Â minOccurs="1"
Â Â maxOccurs="unbounded"/&gt;
&lt;/content&gt;
    </eg></cell></row><row><cell rend="wovenodd-col1"><hi rend="label" xml:lang="en">Schema Declaration</hi></cell><cell rend="wovenodd-col2"><eg rend="eg_rnc" xml:space="preserve">
element excludes { <ref target="#TEI.exclude">exclude</ref>+ }</eg></cell></row></table></div><div type="refdoc" xml:id="TEI.indentJSON"><head>&lt;indentJSON&gt;</head><index indexName="ODDS"><term sortKey="indentJSON">&lt;indentJSON&gt;</term></index><table rend="wovenodd"><row><cell cols="2" rend="wovenodd-col2"><hi rend="label">&lt;indentJSON&gt; </hi>(<seg>Whether or not to indent code in the JSON index files. Indenting increases the
              file size, but it can be useful if you need to read the files for debugging
              purposes.</seg>) </cell></row><row><cell rend="wovenodd-col1"><hi rend="label" xml:lang="en">Namespace</hi></cell><cell rend="wovenodd-col2">http://hcmc.uvic.ca/ns/staticSearch</cell></row><row><cell rend="wovenodd-col1"><hi rend="label" xml:lang="en">Module</hi></cell><cell rend="wovenodd-col2">ss</cell></row><row><cell rend="wovenodd-col1"><hi rend="label" xml:lang="en">Contained by</hi></cell><cell rend="wovenodd-col2"><ab rend="parent"><ab rend="specChildren"><ab rend="specChild"><seg rend="specChildModule">ss: </seg><seg rend="specChildElements"><ref target="#TEI.params" rend="link_odd_elementSpec">params</ref></seg></ab></ab></ab></cell></row><row><cell rend="wovenodd-col1"><hi rend="label" xml:lang="en">May contain</hi></cell><cell rend="wovenodd-col2"><seg xml:lang="en">Empty element</seg></cell></row><row><cell rend="wovenodd-col1"><hi rend="label" xml:lang="en">Content model</hi></cell><cell rend="wovenodd-col2"><eg xml:space="preserve">
&lt;content&gt;
Â &lt;dataRefÂ name="boolean"/&gt;
&lt;/content&gt;
    </eg></cell></row><row><cell rend="wovenodd-col1"><hi rend="label" xml:lang="en">Schema Declaration</hi></cell><cell rend="wovenodd-col2"><eg rend="eg_rnc" xml:space="preserve">
element indentJSON { xsd:boolean }</eg></cell></row></table></div><div type="refdoc" xml:id="TEI.kwicTruncateString"><head>&lt;kwicTruncateString&gt;</head><index indexName="ODDS"><term sortKey="kwicTruncateString">&lt;kwicTruncateString&gt;</term></index><table rend="wovenodd"><row><cell cols="2" rend="wovenodd-col2"><hi rend="label">&lt;kwicTruncateString&gt; </hi>(<seg>The string that will be used to signal ellipsis at the beginning and end of a
              keyword-in-context extract. Conventionally three periods, or an ellipsis
              character.</seg>) </cell></row><row><cell rend="wovenodd-col1"><hi rend="label" xml:lang="en">Namespace</hi></cell><cell rend="wovenodd-col2">http://hcmc.uvic.ca/ns/staticSearch</cell></row><row><cell rend="wovenodd-col1"><hi rend="label" xml:lang="en">Module</hi></cell><cell rend="wovenodd-col2">ss</cell></row><row><cell rend="wovenodd-col1"><hi rend="label" xml:lang="en">Contained by</hi></cell><cell rend="wovenodd-col2"><ab rend="parent"><ab rend="specChildren"><ab rend="specChild"><seg rend="specChildModule">ss: </seg><seg rend="specChildElements"><ref target="#TEI.params" rend="link_odd_elementSpec">params</ref></seg></ab></ab></ab></cell></row><row><cell rend="wovenodd-col1"><hi rend="label" xml:lang="en">May contain</hi></cell><cell rend="wovenodd-col2"><seg xml:lang="en">Character data only</seg></cell></row><row><cell rend="wovenodd-col1"><hi rend="label" xml:lang="en">Content model</hi></cell><cell rend="wovenodd-col2"><eg xml:space="preserve">
&lt;content&gt;
Â &lt;textNode/&gt;
&lt;/content&gt;
    </eg></cell></row><row><cell rend="wovenodd-col1"><hi rend="label" xml:lang="en">Schema Declaration</hi></cell><cell rend="wovenodd-col2"><eg rend="eg_rnc" xml:space="preserve">
element kwicTruncateString { text }</eg></cell></row></table></div><div type="refdoc" xml:id="TEI.maxKwicsToHarvest"><head>&lt;maxKwicsToHarvest&gt;</head><index indexName="ODDS"><term sortKey="maxKwicsToHarvest">&lt;maxKwicsToHarvest&gt;</term></index><table rend="wovenodd"><row><cell cols="2" rend="wovenodd-col2"><hi rend="label">&lt;maxKwicsToHarvest&gt; </hi>(<seg>This controls the maximum number of keyword-in-context extracts that will be
              stored for each term. If phrasalSearch is set to true, this parameter is
              ignored, because phrasal searches will only work properly if all contexts are
              stored.</seg>) </cell></row><row><cell rend="wovenodd-col1"><hi rend="label" xml:lang="en">Namespace</hi></cell><cell rend="wovenodd-col2">http://hcmc.uvic.ca/ns/staticSearch</cell></row><row><cell rend="wovenodd-col1"><hi rend="label" xml:lang="en">Module</hi></cell><cell rend="wovenodd-col2">ss</cell></row><row><cell rend="wovenodd-col1"><hi rend="label" xml:lang="en">Contained by</hi></cell><cell rend="wovenodd-col2"><ab rend="parent"><ab rend="specChildren"><ab rend="specChild"><seg rend="specChildModule">ss: </seg><seg rend="specChildElements"><ref target="#TEI.params" rend="link_odd_elementSpec">params</ref></seg></ab></ab></ab></cell></row><row><cell rend="wovenodd-col1"><hi rend="label" xml:lang="en">May contain</hi></cell><cell rend="wovenodd-col2"><seg xml:lang="en">Empty element</seg></cell></row><row><cell rend="wovenodd-col1"><hi rend="label" xml:lang="en">Content model</hi></cell><cell rend="wovenodd-col2"><eg xml:space="preserve">
&lt;content&gt;
Â &lt;dataRefÂ name="nonNegativeInteger"/&gt;
&lt;/content&gt;
    </eg></cell></row><row><cell rend="wovenodd-col1"><hi rend="label" xml:lang="en">Schema Declaration</hi></cell><cell rend="wovenodd-col2"><eg rend="eg_rnc" xml:space="preserve">
element maxKwicsToHarvest { xsd:nonNegativeInteger }</eg></cell></row></table></div><div type="refdoc" xml:id="TEI.maxKwicsToShow"><head>&lt;maxKwicsToShow&gt;</head><index indexName="ODDS"><term sortKey="maxKwicsToShow">&lt;maxKwicsToShow&gt;</term></index><table rend="wovenodd"><row><cell cols="2" rend="wovenodd-col2"><hi rend="label">&lt;maxKwicsToShow&gt; </hi>(<seg>This controls the maximum number of keyword-in-context extracts that will be shown
              in the search page for each hit document returned.</seg>) </cell></row><row><cell rend="wovenodd-col1"><hi rend="label" xml:lang="en">Namespace</hi></cell><cell rend="wovenodd-col2">http://hcmc.uvic.ca/ns/staticSearch</cell></row><row><cell rend="wovenodd-col1"><hi rend="label" xml:lang="en">Module</hi></cell><cell rend="wovenodd-col2">ss</cell></row><row><cell rend="wovenodd-col1"><hi rend="label" xml:lang="en">Contained by</hi></cell><cell rend="wovenodd-col2"><ab rend="parent"><ab rend="specChildren"><ab rend="specChild"><seg rend="specChildModule">ss: </seg><seg rend="specChildElements"><ref target="#TEI.params" rend="link_odd_elementSpec">params</ref></seg></ab></ab></ab></cell></row><row><cell rend="wovenodd-col1"><hi rend="label" xml:lang="en">May contain</hi></cell><cell rend="wovenodd-col2"><seg xml:lang="en">Empty element</seg></cell></row><row><cell rend="wovenodd-col1"><hi rend="label" xml:lang="en">Content model</hi></cell><cell rend="wovenodd-col2"><eg xml:space="preserve">
&lt;content&gt;
Â &lt;dataRefÂ name="nonNegativeInteger"/&gt;
&lt;/content&gt;
    </eg></cell></row><row><cell rend="wovenodd-col1"><hi rend="label" xml:lang="en">Schema Declaration</hi></cell><cell rend="wovenodd-col2"><eg rend="eg_rnc" xml:space="preserve">
element maxKwicsToShow { xsd:nonNegativeInteger }</eg></cell></row></table></div><div type="refdoc" xml:id="TEI.outputFolder"><head>&lt;outputFolder&gt;</head><index indexName="ODDS"><term sortKey="outputFolder">&lt;outputFolder&gt;</term></index><table rend="wovenodd"><row><cell cols="2" rend="wovenodd-col2"><hi rend="label">&lt;outputFolder&gt; </hi>(<seg>The name of the output folder into which the index data and JavaScript will 
              be placed in the site search. This should conform with the 
              XML Name specification.</seg>) </cell></row><row><cell rend="wovenodd-col1"><hi rend="label" xml:lang="en">Namespace</hi></cell><cell rend="wovenodd-col2">http://hcmc.uvic.ca/ns/staticSearch</cell></row><row><cell rend="wovenodd-col1"><hi rend="label" xml:lang="en">Module</hi></cell><cell rend="wovenodd-col2">ss</cell></row><row><cell rend="wovenodd-col1"><hi rend="label" xml:lang="en">Contained by</hi></cell><cell rend="wovenodd-col2"><ab rend="parent"><ab rend="specChildren"><ab rend="specChild"><seg rend="specChildModule">ss: </seg><seg rend="specChildElements"><ref target="#TEI.params" rend="link_odd_elementSpec">params</ref></seg></ab></ab></ab></cell></row><row><cell rend="wovenodd-col1"><hi rend="label" xml:lang="en">May contain</hi></cell><cell rend="wovenodd-col2"><seg xml:lang="en">Empty element</seg></cell></row><row><cell rend="wovenodd-col1"><hi rend="label" xml:lang="en">Content model</hi></cell><cell rend="wovenodd-col2"><eg xml:space="preserve">
&lt;content&gt;
Â &lt;dataRefÂ name="NCName"/&gt;
&lt;/content&gt;
    </eg></cell></row><row><cell rend="wovenodd-col1"><hi rend="label" xml:lang="en">Schema Declaration</hi></cell><cell rend="wovenodd-col2"><eg rend="eg_rnc" xml:space="preserve">
element outputFolder { xsd:NCName }</eg></cell></row></table></div><div type="refdoc" xml:id="TEI.params"><head>&lt;params&gt;</head><index indexName="ODDS"><term sortKey="params">&lt;params&gt;</term></index><table rend="wovenodd"><row><cell cols="2" rend="wovenodd-col2"><hi rend="label">&lt;params&gt; </hi>(<seg>Element containing most of the settings which enable the Generator to
            find the target website content and process it appropriately.</seg>) </cell></row><row><cell rend="wovenodd-col1"><hi rend="label" xml:lang="en">Namespace</hi></cell><cell rend="wovenodd-col2">http://hcmc.uvic.ca/ns/staticSearch</cell></row><row><cell rend="wovenodd-col1"><hi rend="label" xml:lang="en">Module</hi></cell><cell rend="wovenodd-col2">ss</cell></row><row><cell rend="wovenodd-col1"><hi rend="label" xml:lang="en">Contained by</hi></cell><cell rend="wovenodd-col2"><ab rend="parent"><ab rend="specChildren"><ab rend="specChild"><seg rend="specChildModule">ss: </seg><seg rend="specChildElements"><ref target="#TEI.config" rend="link_odd_elementSpec">config</ref></seg></ab></ab></ab></cell></row><row><cell rend="wovenodd-col1"><hi rend="label" xml:lang="en">May contain</hi></cell><cell rend="wovenodd-col2"><ab rend="specChildren"><ab rend="specChild"><seg rend="specChildModule">ss: </seg><seg rend="specChildElements"><ref target="#TEI.createContexts" rend="link_odd_elementSpec">createContexts</ref><c xml:space="preserve"> </c><ref target="#TEI.dictionaryFile" rend="link_odd_elementSpec">dictionaryFile</ref><c xml:space="preserve"> </c><ref target="#TEI.indentJSON" rend="link_odd_elementSpec">indentJSON</ref><c xml:space="preserve"> </c><ref target="#TEI.kwicTruncateString" rend="link_odd_elementSpec">kwicTruncateString</ref><c xml:space="preserve"> </c><ref target="#TEI.maxKwicsToHarvest" rend="link_odd_elementSpec">maxKwicsToHarvest</ref><c xml:space="preserve"> </c><ref target="#TEI.maxKwicsToShow" rend="link_odd_elementSpec">maxKwicsToShow</ref><c xml:space="preserve"> </c><ref target="#TEI.outputFolder" rend="link_odd_elementSpec">outputFolder</ref><c xml:space="preserve"> </c><ref target="#TEI.phrasalSearch" rend="link_odd_elementSpec">phrasalSearch</ref><c xml:space="preserve"> </c><ref target="#TEI.recurse" rend="link_odd_elementSpec">recurse</ref><c xml:space="preserve"> </c><ref target="#TEI.searchFile" rend="link_odd_elementSpec">searchFile</ref><c xml:space="preserve"> </c><ref target="#TEI.stopwordsFile" rend="link_odd_elementSpec">stopwordsFile</ref><c xml:space="preserve"> </c><ref target="#TEI.totalKwicLength" rend="link_odd_elementSpec">totalKwicLength</ref><c xml:space="preserve"> </c><ref target="#TEI.verbose" rend="link_odd_elementSpec">verbose</ref><c xml:space="preserve"> </c><ref target="#TEI.versionFile" rend="link_odd_elementSpec">versionFile</ref></seg></ab></ab></cell></row><row><cell rend="wovenodd-col1"><hi rend="label" xml:lang="en">Content model</hi></cell><cell rend="wovenodd-col2"><eg xml:space="preserve">
&lt;content&gt;
Â &lt;sequenceÂ minOccurs="1"Â maxOccurs="1"&gt;
Â Â &lt;elementRefÂ key="searchFile"/&gt;
Â Â &lt;elementRefÂ key="versionFile"
Â Â Â minOccurs="0"/&gt;
Â Â &lt;elementRefÂ key="recurse"/&gt;
Â Â &lt;elementRefÂ key="phrasalSearch"
Â Â Â minOccurs="0"/&gt;
Â Â &lt;elementRefÂ key="createContexts"
Â Â Â minOccurs="0"/&gt;
Â Â &lt;elementRefÂ key="maxKwicsToHarvest"
Â Â Â minOccurs="0"/&gt;
Â Â &lt;elementRefÂ key="maxKwicsToShow"
Â Â Â minOccurs="0"/&gt;
Â Â &lt;elementRefÂ key="totalKwicLength"
Â Â Â minOccurs="0"/&gt;
Â Â &lt;elementRefÂ key="kwicTruncateString"
Â Â Â minOccurs="0"/&gt;
Â Â &lt;elementRefÂ key="verbose"Â minOccurs="0"/&gt;
Â Â &lt;elementRefÂ key="stopwordsFile"
Â Â Â minOccurs="0"/&gt;
Â Â &lt;elementRefÂ key="dictionaryFile"
Â Â Â minOccurs="0"/&gt;
Â Â &lt;elementRefÂ key="replacementsFile"
Â Â Â minOccurs="0"/&gt;
Â Â &lt;elementRefÂ key="indentJSON"
Â Â Â minOccurs="0"/&gt;
Â Â &lt;elementRefÂ key="outputFolder"
Â Â Â minOccurs="0"/&gt;
Â &lt;/sequence&gt;
&lt;/content&gt;
    </eg></cell></row><row><cell rend="wovenodd-col1"><hi rend="label" xml:lang="en">Schema Declaration</hi></cell><cell rend="wovenodd-col2"><eg rend="eg_rnc" xml:space="preserve">
element params
{
   <ref target="#TEI.searchFile">searchFile</ref>,
   <ref target="#TEI.versionFile">versionFile</ref>?,
   <ref target="#TEI.recurse">recurse</ref>,
   <ref target="#TEI.phrasalSearch">phrasalSearch</ref>?,
   <ref target="#TEI.createContexts">createContexts</ref>?,
   <ref target="#TEI.maxKwicsToHarvest">maxKwicsToHarvest</ref>?,
   <ref target="#TEI.maxKwicsToShow">maxKwicsToShow</ref>?,
   <ref target="#TEI.totalKwicLength">totalKwicLength</ref>?,
   <ref target="#TEI.kwicTruncateString">kwicTruncateString</ref>?,
   <ref target="#TEI.verbose">verbose</ref>?,
   <ref target="#TEI.stopwordsFile">stopwordsFile</ref>?,
   <ref target="#TEI.dictionaryFile">dictionaryFile</ref>?,
   <ref target="#TEI.replacementsFile">replacementsFile</ref>?,
   <ref target="#TEI.indentJSON">indentJSON</ref>?,
   <ref target="#TEI.outputFolder">outputFolder</ref>?
}</eg></cell></row></table></div><div type="refdoc" xml:id="TEI.phrasalSearch"><head>&lt;phrasalSearch&gt;</head><index indexName="ODDS"><term sortKey="phrasalSearch">&lt;phrasalSearch&gt;</term></index><table rend="wovenodd"><row><cell cols="2" rend="wovenodd-col2"><hi rend="label">&lt;phrasalSearch&gt; </hi>(<seg>Whether or not to support phrasal searches. If this is true, then the maxContexts
            setting will be ignored, because all contexts are required to properly support phrasal search.</seg>) </cell></row><row><cell rend="wovenodd-col1"><hi rend="label" xml:lang="en">Namespace</hi></cell><cell rend="wovenodd-col2">http://hcmc.uvic.ca/ns/staticSearch</cell></row><row><cell rend="wovenodd-col1"><hi rend="label" xml:lang="en">Module</hi></cell><cell rend="wovenodd-col2">ss</cell></row><row><cell rend="wovenodd-col1"><hi rend="label" xml:lang="en">Contained by</hi></cell><cell rend="wovenodd-col2"><ab rend="parent"><ab rend="specChildren"><ab rend="specChild"><seg rend="specChildModule">ss: </seg><seg rend="specChildElements"><ref target="#TEI.params" rend="link_odd_elementSpec">params</ref></seg></ab></ab></ab></cell></row><row><cell rend="wovenodd-col1"><hi rend="label" xml:lang="en">May contain</hi></cell><cell rend="wovenodd-col2"><seg xml:lang="en">Empty element</seg></cell></row><row><cell rend="wovenodd-col1"><hi rend="label" xml:lang="en">Content model</hi></cell><cell rend="wovenodd-col2"><eg xml:space="preserve">
&lt;content&gt;
Â &lt;dataRefÂ name="boolean"/&gt;
&lt;/content&gt;
    </eg></cell></row><row><cell rend="wovenodd-col1"><hi rend="label" xml:lang="en">Schema Declaration</hi></cell><cell rend="wovenodd-col2"><eg rend="eg_rnc" xml:space="preserve">
element phrasalSearch { xsd:boolean }</eg></cell></row></table></div><div type="refdoc" xml:id="TEI.recurse"><head>&lt;recurse&gt;</head><index indexName="ODDS"><term sortKey="recurse">&lt;recurse&gt;</term></index><table rend="wovenodd"><row><cell cols="2" rend="wovenodd-col2"><hi rend="label">&lt;recurse&gt; </hi>(<seg>Whether to recurse into subdirectories of the collection directory or
              not.</seg>) </cell></row><row><cell rend="wovenodd-col1"><hi rend="label" xml:lang="en">Namespace</hi></cell><cell rend="wovenodd-col2">http://hcmc.uvic.ca/ns/staticSearch</cell></row><row><cell rend="wovenodd-col1"><hi rend="label" xml:lang="en">Module</hi></cell><cell rend="wovenodd-col2">ss</cell></row><row><cell rend="wovenodd-col1"><hi rend="label" xml:lang="en">Contained by</hi></cell><cell rend="wovenodd-col2"><ab rend="parent"><ab rend="specChildren"><ab rend="specChild"><seg rend="specChildModule">ss: </seg><seg rend="specChildElements"><ref target="#TEI.params" rend="link_odd_elementSpec">params</ref></seg></ab></ab></ab></cell></row><row><cell rend="wovenodd-col1"><hi rend="label" xml:lang="en">May contain</hi></cell><cell rend="wovenodd-col2"><seg xml:lang="en">Empty element</seg></cell></row><row><cell rend="wovenodd-col1"><hi rend="label" xml:lang="en">Content model</hi></cell><cell rend="wovenodd-col2"><eg xml:space="preserve">
&lt;content&gt;
Â &lt;dataRefÂ name="boolean"/&gt;
&lt;/content&gt;
    </eg></cell></row><row><cell rend="wovenodd-col1"><hi rend="label" xml:lang="en">Schema Declaration</hi></cell><cell rend="wovenodd-col2"><eg rend="eg_rnc" xml:space="preserve">
element recurse { xsd:boolean }</eg></cell></row></table></div><div type="refdoc" xml:id="TEI.rule"><head>&lt;rule&gt;</head><index indexName="ODDS"><term sortKey="rule">&lt;rule&gt;</term><index indexName="ODDS"><term sortKey="weight">@weight</term></index></index><table rend="wovenodd"><row><cell cols="2" rend="wovenodd-col2"><hi rend="label">&lt;rule&gt; </hi>(<seg>A rule that specifies a document path in XPath, and provides weighting for search
              terms found in that context.</seg>) </cell></row><row><cell rend="wovenodd-col1"><hi rend="label" xml:lang="en">Namespace</hi></cell><cell rend="wovenodd-col2">http://hcmc.uvic.ca/ns/staticSearch</cell></row><row><cell rend="wovenodd-col1"><hi rend="label" xml:lang="en">Module</hi></cell><cell rend="wovenodd-col2">ss</cell></row><row><cell rend="wovenodd-col1"><hi rend="label" xml:lang="en">Attributes</hi></cell><cell rend="wovenodd-col2"><ref target="#TEI.att.xpath">att.xpath</ref> (<hi rend="attribute">@xpath</hi>)<c xml:space="preserve"> </c><table rend="attList"><row><cell rend="odd_label">weight</cell><cell rend="odd_value">(<seg>The weighting to give to a search token found in the context specified by the
                  xpath attribute. Set to 0 to completely suppress indexing for a
                  specific context, or greater than 1 to give stronger weighting.</seg>) <table rend="attDef"><row><cell rend="odd_label"><hi rend="label" xml:lang="en">Status</hi> </cell><cell rend="odd_value"><seg xml:lang="en"><hi rend="required">Required</hi></seg></cell></row><row><cell rend="odd_label"><hi xml:lang="en" rend="label">Datatype</hi> </cell><cell rend="odd_value"><tei:ref xmlns:tei="http://www.tei-c.org/ns/1.0" target="https://www.w3.org/TR/xmlschema-2/#nonNegativeInteger">nonNegativeInteger</tei:ref></cell></row></table></cell></row></table></cell></row><row><cell rend="wovenodd-col1"><hi rend="label" xml:lang="en">Contained by</hi></cell><cell rend="wovenodd-col2"><ab rend="parent"><ab rend="specChildren"><ab rend="specChild"><seg rend="specChildModule">ss: </seg><seg rend="specChildElements"><ref target="#TEI.rules" rend="link_odd_elementSpec">rules</ref></seg></ab></ab></ab></cell></row><row><cell rend="wovenodd-col1"><hi rend="label" xml:lang="en">May contain</hi></cell><cell rend="wovenodd-col2"><seg xml:lang="en">Empty element</seg></cell></row><row><cell rend="wovenodd-col1"><hi rend="label" xml:lang="en">Content model</hi></cell><cell rend="wovenodd-col2"><eg xml:space="preserve">
&lt;content&gt;
Â &lt;empty/&gt;
&lt;/content&gt;
    </eg></cell></row><row><cell rend="wovenodd-col1"><hi rend="label" xml:lang="en">Schema Declaration</hi></cell><cell rend="wovenodd-col2"><eg rend="eg_rnc" xml:space="preserve">
element rule { <ref target="#TEI.att.xpath">att.xpath.attributes</ref>, attribute weight { text }, empty }</eg></cell></row></table></div><div type="refdoc" xml:id="TEI.rules"><head>&lt;rules&gt;</head><index indexName="ODDS"><term sortKey="rules">&lt;rules&gt;</term></index><table rend="wovenodd"><row><cell cols="2" rend="wovenodd-col2"><hi rend="label">&lt;rules&gt; </hi>(<seg>The set of rules, expressed as XPath, that control weighting of search terms
              found in specific contexts.</seg>) </cell></row><row><cell rend="wovenodd-col1"><hi rend="label" xml:lang="en">Namespace</hi></cell><cell rend="wovenodd-col2">http://hcmc.uvic.ca/ns/staticSearch</cell></row><row><cell rend="wovenodd-col1"><hi rend="label" xml:lang="en">Module</hi></cell><cell rend="wovenodd-col2">ss</cell></row><row><cell rend="wovenodd-col1"><hi rend="label" xml:lang="en">Contained by</hi></cell><cell rend="wovenodd-col2"><ab rend="parent"><ab rend="specChildren"><ab rend="specChild"><seg rend="specChildModule">ss: </seg><seg rend="specChildElements"><ref target="#TEI.config" rend="link_odd_elementSpec">config</ref></seg></ab></ab></ab></cell></row><row><cell rend="wovenodd-col1"><hi rend="label" xml:lang="en">May contain</hi></cell><cell rend="wovenodd-col2"><ab rend="specChildren"><ab rend="specChild"><seg rend="specChildModule">ss: </seg><seg rend="specChildElements"><ref target="#TEI.rule" rend="link_odd_elementSpec">rule</ref></seg></ab></ab></cell></row><row><cell rend="wovenodd-col1"><hi rend="label" xml:lang="en">Content model</hi></cell><cell rend="wovenodd-col2"><eg xml:space="preserve">
&lt;content&gt;
Â &lt;elementRefÂ key="rule"Â minOccurs="1"
Â Â maxOccurs="unbounded"/&gt;
&lt;/content&gt;
    </eg></cell></row><row><cell rend="wovenodd-col1"><hi rend="label" xml:lang="en">Schema Declaration</hi></cell><cell rend="wovenodd-col2"><eg rend="eg_rnc" xml:space="preserve">
element rules { <ref target="#TEI.rule">rule</ref>+ }</eg></cell></row></table></div><div type="refdoc" xml:id="TEI.searchFile"><head>&lt;searchFile&gt;</head><index indexName="ODDS"><term sortKey="searchFile">&lt;searchFile&gt;</term></index><table rend="wovenodd"><row><cell cols="2" rend="wovenodd-col2"><hi rend="label">&lt;searchFile&gt; </hi>(<seg>The search file (aka page) that will be the primary access point for the static search. Note
            that this page must be at the root of the collection directory.</seg>) </cell></row><row><cell rend="wovenodd-col1"><hi rend="label" xml:lang="en">Namespace</hi></cell><cell rend="wovenodd-col2">http://hcmc.uvic.ca/ns/staticSearch</cell></row><row><cell rend="wovenodd-col1"><hi rend="label" xml:lang="en">Module</hi></cell><cell rend="wovenodd-col2">ss</cell></row><row><cell rend="wovenodd-col1"><hi rend="label" xml:lang="en">Contained by</hi></cell><cell rend="wovenodd-col2"><ab rend="parent"><ab rend="specChildren"><ab rend="specChild"><seg rend="specChildModule">ss: </seg><seg rend="specChildElements"><ref target="#TEI.params" rend="link_odd_elementSpec">params</ref></seg></ab></ab></ab></cell></row><row><cell rend="wovenodd-col1"><hi rend="label" xml:lang="en">May contain</hi></cell><cell rend="wovenodd-col2"><seg xml:lang="en">Empty element</seg></cell></row><row><cell rend="wovenodd-col1"><hi rend="label" xml:lang="en">Content model</hi></cell><cell rend="wovenodd-col2"><eg xml:space="preserve">
&lt;content&gt;
Â &lt;dataRefÂ name="anyURI"/&gt;
&lt;/content&gt;
    </eg></cell></row><row><cell rend="wovenodd-col1"><hi rend="label" xml:lang="en">Schema Declaration</hi></cell><cell rend="wovenodd-col2"><eg rend="eg_rnc" xml:space="preserve">
element searchFile { xsd:anyURI }</eg></cell></row></table></div><div type="refdoc" xml:id="TEI.stopwordsFile"><head>&lt;stopwordsFile&gt;</head><index indexName="ODDS"><term sortKey="stopwordsFile">&lt;stopwordsFile&gt;</term></index><table rend="wovenodd"><row><cell cols="2" rend="wovenodd-col2"><hi rend="label">&lt;stopwordsFile&gt; </hi>(<seg>The location of a text file containing a list of stopwords (words to be ignored
            when indexing). These are typically words too common to be worth searching for, but 
            every site will also have some specific terms which are used so widely across the site
            that they should be suppressed to control the index size. The list should be in plain text
            with one word per line.</seg>) </cell></row><row><cell rend="wovenodd-col1"><hi rend="label" xml:lang="en">Namespace</hi></cell><cell rend="wovenodd-col2">http://hcmc.uvic.ca/ns/staticSearch</cell></row><row><cell rend="wovenodd-col1"><hi rend="label" xml:lang="en">Module</hi></cell><cell rend="wovenodd-col2">ss</cell></row><row><cell rend="wovenodd-col1"><hi rend="label" xml:lang="en">Contained by</hi></cell><cell rend="wovenodd-col2"><ab rend="parent"><ab rend="specChildren"><ab rend="specChild"><seg rend="specChildModule">ss: </seg><seg rend="specChildElements"><ref target="#TEI.params" rend="link_odd_elementSpec">params</ref></seg></ab></ab></ab></cell></row><row><cell rend="wovenodd-col1"><hi rend="label" xml:lang="en">May contain</hi></cell><cell rend="wovenodd-col2"><seg xml:lang="en">Empty element</seg></cell></row><row><cell rend="wovenodd-col1"><hi rend="label" xml:lang="en">Content model</hi></cell><cell rend="wovenodd-col2"><eg xml:space="preserve">
&lt;content&gt;
Â &lt;dataRefÂ name="anyURI"/&gt;
&lt;/content&gt;
    </eg></cell></row><row><cell rend="wovenodd-col1"><hi rend="label" xml:lang="en">Schema Declaration</hi></cell><cell rend="wovenodd-col2"><eg rend="eg_rnc" xml:space="preserve">
element stopwordsFile { xsd:anyURI }</eg></cell></row></table></div><div type="refdoc" xml:id="TEI.totalKwicLength"><head>&lt;totalKwicLength&gt;</head><index indexName="ODDS"><term sortKey="totalKwicLength">&lt;totalKwicLength&gt;</term></index><table rend="wovenodd"><row><cell cols="2" rend="wovenodd-col2"><hi rend="label">&lt;totalKwicLength&gt; </hi>(<seg>If createContexts is set to true, then this parameter controls how long
              the contexts will be.</seg>) </cell></row><row><cell rend="wovenodd-col1"><hi rend="label" xml:lang="en">Namespace</hi></cell><cell rend="wovenodd-col2">http://hcmc.uvic.ca/ns/staticSearch</cell></row><row><cell rend="wovenodd-col1"><hi rend="label" xml:lang="en">Module</hi></cell><cell rend="wovenodd-col2">ss</cell></row><row><cell rend="wovenodd-col1"><hi rend="label" xml:lang="en">Contained by</hi></cell><cell rend="wovenodd-col2"><ab rend="parent"><ab rend="specChildren"><ab rend="specChild"><seg rend="specChildModule">ss: </seg><seg rend="specChildElements"><ref target="#TEI.params" rend="link_odd_elementSpec">params</ref></seg></ab></ab></ab></cell></row><row><cell rend="wovenodd-col1"><hi rend="label" xml:lang="en">May contain</hi></cell><cell rend="wovenodd-col2"><seg xml:lang="en">Empty element</seg></cell></row><row><cell rend="wovenodd-col1"><hi rend="label" xml:lang="en">Content model</hi></cell><cell rend="wovenodd-col2"><eg xml:space="preserve">
&lt;content&gt;
Â &lt;dataRefÂ name="nonNegativeInteger"/&gt;
&lt;/content&gt;
    </eg></cell></row><row><cell rend="wovenodd-col1"><hi rend="label" xml:lang="en">Schema Declaration</hi></cell><cell rend="wovenodd-col2"><eg rend="eg_rnc" xml:space="preserve">
element totalKwicLength { xsd:nonNegativeInteger }</eg></cell></row></table></div><div type="refdoc" xml:id="TEI.verbose"><head>&lt;verbose&gt;</head><index indexName="ODDS"><term sortKey="verbose">&lt;verbose&gt;</term></index><table rend="wovenodd"><row><cell cols="2" rend="wovenodd-col2"><hi rend="label">&lt;verbose&gt; </hi>(<seg>Turns on more detailed reporting during the indexing process.</seg>) </cell></row><row><cell rend="wovenodd-col1"><hi rend="label" xml:lang="en">Namespace</hi></cell><cell rend="wovenodd-col2">http://hcmc.uvic.ca/ns/staticSearch</cell></row><row><cell rend="wovenodd-col1"><hi rend="label" xml:lang="en">Module</hi></cell><cell rend="wovenodd-col2">ss</cell></row><row><cell rend="wovenodd-col1"><hi rend="label" xml:lang="en">Contained by</hi></cell><cell rend="wovenodd-col2"><ab rend="parent"><ab rend="specChildren"><ab rend="specChild"><seg rend="specChildModule">ss: </seg><seg rend="specChildElements"><ref target="#TEI.params" rend="link_odd_elementSpec">params</ref></seg></ab></ab></ab></cell></row><row><cell rend="wovenodd-col1"><hi rend="label" xml:lang="en">May contain</hi></cell><cell rend="wovenodd-col2"><seg xml:lang="en">Empty element</seg></cell></row><row><cell rend="wovenodd-col1"><hi rend="label" xml:lang="en">Content model</hi></cell><cell rend="wovenodd-col2"><eg xml:space="preserve">
&lt;content&gt;
Â &lt;dataRefÂ name="boolean"/&gt;
&lt;/content&gt;
    </eg></cell></row><row><cell rend="wovenodd-col1"><hi rend="label" xml:lang="en">Schema Declaration</hi></cell><cell rend="wovenodd-col2"><eg rend="eg_rnc" xml:space="preserve">
element verbose { xsd:boolean }</eg></cell></row></table></div><div type="refdoc" xml:id="TEI.versionFile"><head>&lt;versionFile&gt;</head><index indexName="ODDS"><term sortKey="versionFile">&lt;versionFile&gt;</term></index><table rend="wovenodd"><row><cell cols="2" rend="wovenodd-col2"><hi rend="label">&lt;versionFile&gt; </hi>(<seg>The relative path to a text file containing a single version identifier (such as 
              1.5, 123456, or  06ad419). This will be used to create
            unique filenames for JSON resources, so that when a site is updated, so that the browser
            will not use cached versions of older index files.</seg>) </cell></row><row><cell rend="wovenodd-col1"><hi rend="label" xml:lang="en">Namespace</hi></cell><cell rend="wovenodd-col2">http://hcmc.uvic.ca/ns/staticSearch</cell></row><row><cell rend="wovenodd-col1"><hi rend="label" xml:lang="en">Module</hi></cell><cell rend="wovenodd-col2">ss</cell></row><row><cell rend="wovenodd-col1"><hi rend="label" xml:lang="en">Contained by</hi></cell><cell rend="wovenodd-col2"><ab rend="parent"><ab rend="specChildren"><ab rend="specChild"><seg rend="specChildModule">ss: </seg><seg rend="specChildElements"><ref target="#TEI.params" rend="link_odd_elementSpec">params</ref></seg></ab></ab></ab></cell></row><row><cell rend="wovenodd-col1"><hi rend="label" xml:lang="en">May contain</hi></cell><cell rend="wovenodd-col2"><seg xml:lang="en">Empty element</seg></cell></row><row><cell rend="wovenodd-col1"><hi rend="label" xml:lang="en">Content model</hi></cell><cell rend="wovenodd-col2"><eg xml:space="preserve">
&lt;content&gt;
Â &lt;dataRefÂ name="anyURI"/&gt;
&lt;/content&gt;
    </eg></cell></row><row><cell rend="wovenodd-col1"><hi rend="label" xml:lang="en">Schema Declaration</hi></cell><cell rend="wovenodd-col2"><eg rend="eg_rnc" xml:space="preserve">
element versionFile { xsd:anyURI }</eg></cell></row></table></div></div><div><head>Attribute classes</head><div type="refdoc" xml:id="TEI.att.labelled"><head>att.labelled</head><table rend="wovenodd"><row><cell cols="2" rend="wovenodd-col2"><hi rend="label">att.labelled</hi><index indexName="ODDS"><term>att.labelled (attribute class)</term><index indexName="ODDS"><term sortKey="label">@label</term></index></index>Â (<seg>A class providing a label attribute that can be used to identify/describe contexts and other
              things which benefit from description.</seg>) </cell></row><row><cell rend="wovenodd-col1"><hi rend="label" xml:lang="en">Module</hi></cell><cell rend="wovenodd-col2">ss</cell></row><row><cell rend="wovenodd-col1"><hi rend="label" xml:lang="en">Members</hi></cell><cell rend="wovenodd-col2"><hi rend="showmembers1"><ref target="#TEI.context" rend="link_odd_elementSpec">context</ref></hi></cell></row><row><cell rend="wovenodd-col1"><hi rend="label" xml:lang="en">Attributes</hi></cell><cell rend="wovenodd-col2"><table rend="attList"><row><cell rend="odd_label">label</cell><cell rend="odd_value">(<seg>A string identifier which may be descriptive.</seg>) <table rend="attDef"><row><cell rend="odd_label"><hi rend="label" xml:lang="en">Status</hi> </cell><cell rend="odd_value"><seg xml:lang="en">Optional</seg></cell></row><row><cell rend="odd_label"><hi xml:lang="en" rend="label">Datatype</hi> </cell><cell rend="odd_value"><tei:ref xmlns:tei="http://www.tei-c.org/ns/1.0" target="https://www.w3.org/TR/xmlschema-2/#string">string</tei:ref></cell></row></table></cell></row></table></cell></row></table></div><div type="refdoc" xml:id="TEI.att.xpath"><head>att.xpath</head><table rend="wovenodd"><row><cell cols="2" rend="wovenodd-col2"><hi rend="label">att.xpath</hi><index indexName="ODDS"><term>att.xpath (attribute class)</term><index indexName="ODDS"><term sortKey="xpath">@xpath</term></index></index>Â (<seg>A class providing attributes that enable specification of document locations.</seg>) </cell></row><row><cell rend="wovenodd-col1"><hi rend="label" xml:lang="en">Module</hi></cell><cell rend="wovenodd-col2">ss</cell></row><row><cell rend="wovenodd-col1"><hi rend="label" xml:lang="en">Members</hi></cell><cell rend="wovenodd-col2"><hi rend="showmembers1"><ref target="#TEI.context" rend="link_odd_elementSpec">context</ref><c xml:space="preserve"> </c><ref target="#TEI.exclude" rend="link_odd_elementSpec">exclude</ref><c xml:space="preserve"> </c><ref target="#TEI.rule" rend="link_odd_elementSpec">rule</ref></hi></cell></row><row><cell rend="wovenodd-col1"><hi rend="label" xml:lang="en">Attributes</hi></cell><cell rend="wovenodd-col2"><table rend="attList"><row><cell rend="odd_label">xpath</cell><cell rend="odd_value">(<seg>An XPath equivalent to the @match attribute of an xsl:template, which
                  specifies a context in a document.</seg>) <table rend="attDef"><row><cell rend="odd_label"><hi rend="label" xml:lang="en">Status</hi> </cell><cell rend="odd_value"><seg xml:lang="en"><hi rend="required">Required</hi></seg></cell></row><row><cell rend="odd_label"><hi xml:lang="en" rend="label">Datatype</hi> </cell><cell rend="odd_value"><tei:ref xmlns:tei="http://www.tei-c.org/ns/1.0" target="https://www.w3.org/TR/xmlschema-2/#string">string</tei:ref></cell></row></table></cell></row></table></cell></row></table></div></div></div></back></text></TEI>